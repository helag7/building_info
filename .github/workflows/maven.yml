# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Upload jar artifact
      uses: actions/upload-artifact@v3
      with:
        name: built-jar
        path: target/*.jar
    - name: Commit and push generated .jar to repo
      run: |
        # Create release folder if it doesn't exist
        mkdir -p release
        # Copy the generated .jar file to the release folder
        cp target/*.jar release/
        # Configure Git user for the action
        git config user.name "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
        # Add and commit the .jar file
        git add release/*.jar
        git commit -m "Add generated .jar"
        # Push the changes to the main branch
        git push
